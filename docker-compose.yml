version: "3.2"

services:
  # KAFKA
  # ports: 3000 - 3999
  zookeeper:
    image: "wurstmeister/zookeeper"
    ports:
      - "3000:2181"
  kafka:
    image: "wurstmeister/kafka:0.10.2.0"
    ports:
      - "3100:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_CREATE_TOPICS: "user_names:4:1,user_follow_infos:4:1,user_scrape_errors:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_HOST_NAME: "localhost"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # GRPC
  # ports: 4000 - 4999
  envoy-proxy:
    build: "./api/envoy-proxy"
    depends_on:
      - "grpc-server"
    ports:
      - "4000:8080"
  grpc-server:
    build:
      context: "."
      dockerfile: "./api/grpcserver/Dockerfile"
    environment:
      GRPC_POSTGRES_HOST: "postgres"
    ports:
      - "4100:10000"

  # POSTGRES
  # ports: 5000 - 5999
  postgres:
    image: "postgres:11.5"
    ports:
      - "5000:5432"
  pgadmin:
    image: "dpage/pgadmin4:4.13"
    ports:
      - "5100:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "my_awesome_email@email.com"
      PGADMIN_DEFAULT_PASSWORD: "does_not_matter"

  # NEO4J
  # ports: 6000 - 6999
  neo4j:
    image: "neo4j:3.5.9"
    ports:
      - "6000:7474"
      - "6001:7687"
    environment:
      NEO4J_HOME: "/var/lib/neo4j"
      # NEO4J_AUTH: none

  # DGRPAH
  # ports: 7000 - 7999
  zero:
    image: "dgraph/dgraph:v1.0.17"
    volumes:
      - type: volume
        source: dgraph
        target: /dgraph
        volume:
          nocopy: true
    ports:
      - "7000:5080"
      - "7001:6080"
    restart: "on-failure"
    command: ["dgraph", "zero", "--my=zero:5080"]
  server:
    image: "dgraph/dgraph:v1.0.17"
    volumes:
      - type: volume
        source: dgraph
        target: /dgraph
        volume:
          nocopy: true
    ports:
      - "7100:8080"
      - "7101:9080"
    restart: on-failure
    command:
      [
        "dgraph",
        "alpha",
        "--my=server:7080",
        "--lru_mb=2048",
        "--zero=zero:5080",
      ]
  ratel:
    image: "dgraph/dgraph:v1.0.17"
    volumes:
      - type: volume
        source: dgraph
        target: /dgraph
        volume:
          nocopy: true
    ports:
      - "7200:8000"
    command: ["dgraph-ratel"]

volumes:
  dgraph:
