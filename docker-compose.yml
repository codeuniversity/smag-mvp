version: "3.2"

services:
  # KAFKA
  # ports: 3000 - 3999
  zookeeper:
    image: "wurstmeister/zookeeper"
    ports:
      - "2181:2181"
  my-kafka:
    image: "wurstmeister/kafka:0.10.2.0"
    ports:
      - "9092:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_CREATE_TOPICS: >
        user_names:4:1,user_follow_infos:4:1,user_scrape_errors:1:1,
        twitter-user_names:4:1,twitter-users_scraped:4:1,twitter-posts_scraped:4:1,
        reached_limit:4:1,renewed_elastic_ip:4:1,renewing_elastic_ip_errors:4:1,
        user_post:4:1,user_instagram-scrape_errors:4:1,insta_comments_info:4:1,post_comment_insta_scraper_errors:4:1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  minio:
    image: minio/minio
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: "AKIAIOSFODNN7EXAMPLE"
      MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    command: "server /data"
  imgproxy:
    image: darthsim/imgproxy
    ports:
      - 8080:8080
    environment:
      IMGPROXY_KEY: 5800c215e5cd5110365c390e83752526fa40758efa4dcc406e3a4fdd6e22877c
      IMGPROXY_SALT: 520f986b998545b4785e0defbc4f3c1203f22de2374a3d53cb7a7fe9fea309c5
      IMGPROXY_SIGNATURE_SIZE: "32"
      AWS_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
      AWS_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
      AWS_REGION: "eu-central-1"
      IMGPROXY_S3_ENDPOINT: "http://minio:9000"
      IMGPROXY_USE_S3: "true"

  face_recognizer:
    build:
      context: "./faces"
    ports:
      - "6666:6666"
      - "6690:6690"
    environment:
      GRPC_PORT: "6666"
      METRICS_PORT: "6690"
  # GRPC
  # ports: 4000 - 4999
  envoy-proxy:
    build:
      context: "."
      dockerfile: "./api/envoy-proxy/Dockerfile"
    depends_on:
      - "grpc-server"
    ports:
      - "4000:8080"
  grpc-server:
    build:
      context: "."
      dockerfile: "./api/grpcserver/Dockerfile"
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_pics_downloader"
      KAFKA_PICTURE_DOWNLOADS_TOPIC: "insta_pic_download_jobs"
      S3_BUCKET_NAME: "instapics"
      S3_REGION: "eu-west-1"
      S3_ENDOINT: "minio:9000"
      S3_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
      S3_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
      S3_USE_SSL: "false"
    ports:
      - "10000:10000"

  # INSTAGRAM SCRAPER
  insta_user-scraper:
    build:
      context: "."
      dockerfile: "insta_user-scraper/Dockerfile"
    image: "smag-insta_user-scraper"
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_user_scraper"
      KAFKA_NAME_TOPIC: "user_names"
      KAFKA_INFO_TOPIC: "user_follow_infos"
      KAFKA_ERR_TOPIC: "insta_user_scaper_err"

  insta_user-inserter:
    build:
      context: "."
      dockerfile: "insta_postgres-inserter/Dockerfile"
    image: "smag-insta_postgres-inserter"
    depends_on:
      - "my-kafka"
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_user_inserter"
      KAFKA_INFO_TOPIC: "user_follow_infos"

  insta_face-indexer:
    build:
      context: "."
      dockerfile: "./es_face-indexer/Dockerfile"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "es-face-indexer2"
      KAFKA_CHANGE_TOPIC: "postgres.public.face_data"
      ES_HOSTS: "http://es-with-plugin:9200"

  es-with-plugin:
    build:
      context: "./elasticsearch-build"
      dockerfile: "Dockerfile"
    environment:
      "discovery.type": "single-node"
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:7.1.0
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=["http://es-with-plugin:9200"]

  insta_user_names-filter:
    build:
      context: "."
      dockerfile: "kafka/changestream/insta_user_names-filter/Dockerfile"
    depends_on:
      - "my-kafka"
      - "postgres"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_user_names-filter"
      KAFKA_CHANGE_TOPIC: "postgres.public.users"

  insta_posts-scraper:
    build:
      context: "."
      dockerfile: "insta_posts-scraper/Dockerfile"
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_posts_scraper"
      KAFKA_NAME_TOPIC: "user_names"
      KAFKA_INSTA_POSTS_TOPIC: "insta_posts"
      KAFKA_ERR_TOPIC: "insta_post_scrape_errors"

  insta_posts-inserter:
    build:
      context: "."
      dockerfile: "insta_posts-inserter/Dockerfile"

    depends_on:
      - "my-kafka"
      - "postgres"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_posts_inserter"
      KAFKA_INSTA_POSTS_TOPIC: "insta_posts"
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"

  insta_post-pictures-filter:
    build:
      context: "."
      dockerfile: "kafka/changestream/insta_post_pictures-filter/Dockerfile"
    depends_on:
      - "my-kafka"
      - "postgres"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_post-pictures-filter"
      KAFKA_CHANGE_TOPIC: "postgres.public.posts"
      KAFKA_PICTURE_DOWNLOADS_TOPIC: "insta_pic_download_jobs"

  insta_pics-downloader:
    build:
      context: "."
      dockerfile: "insta_pics-downloader/Dockerfile"
    depends_on:
      - "my-kafka"
      - "postgres"
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_pics_downloader"
      KAFKA_PICTURE_DOWNLOADS_TOPIC: "insta_pic_download_jobs"
      S3_BUCKET_NAME: "instapics"
      S3_REGION: "eu-west-1"
      S3_ENDOINT: "minio:9000"
      S3_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
      S3_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
      S3_USE_SSL: "false"

  # TWITTER SCRAPER
  twitter_scraper_users:
    build: "twitter_scraper/"
    image: "smag-twitter_scraper"
    command: ["-m", "twitterscraper.users_scraper"]
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_FETCH_TOPIC: "twitter-user_names"
      KAFKA_INSERT_TOPIC: "twitter-users_scraped"
  twitter_scraper_followers:
    build: "twitter_scraper/"
    image: "smag-twitter_scraper"
    command: ["-m", "twitterscraper.followers_scraper"]
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_FETCH_TOPIC: "twitter-user_names"
      KAFKA_INSERT_TOPIC: "twitter-users_scraped"
  twitter_scraper_following:
    build: "twitter_scraper/"
    image: "smag-twitter_scraper"
    command: ["-m", "twitterscraper.following_scraper"]
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_FETCH_TOPIC: "twitter-user_names"
      KAFKA_INSERT_TOPIC: "twitter-users_scraped"
  twitter_scraper_posts:
    build: "twitter_scraper/"
    image: "smag-twitter_scraper"
    command: ["-m", "twitterscraper.posts_scraper"]
    depends_on:
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_FETCH_TOPIC: "twitter-user_names"
      KAFKA_INSERT_TOPIC: "twitter-posts_scraped"

  # TWITTER INSERTER
  twitter_inserter_users:
    build:
      context: "."
      dockerfile: "./twitter_inserter_users/Dockerfile"
    image: "smag-twitter_inserter_users"
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "twitter_inserter_users"
      KAFKA_INFO_TOPIC: "twitter-users_scraped"
      KAFKA_NAME_TOPIC: "twitter-user_names"
  twitter_inserter_posts:
    build:
      context: "."
      dockerfile: "twitter_inserter_posts/Dockerfile"
    image: "smag-twitter_inserter_posts"
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PASSWORD: "12345678"
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "twitter_inserter_posts"
      KAFKA_INFO_TOPIC: "twitter-posts_scraped"
      KAFKA_NAME_TOPIC: "twitter-user_names"

  # POSTGRES
  postgres:
    image: "debezium/postgres:11"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345678"
      POSTGRES_DB: "instascraper"
  connect:
    image: "debezium/connect:0.10"
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: "my-kafka:9092"
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: "my_connect_configs"
      OFFSET_STORAGE_TOPIC: "my_connect_offsets"
      STATUS_STORAGE_TOPIC: "my_connect_statuses"
  pgadmin:
    image: "dpage/pgadmin4:4.13"
    ports:
      - "5100:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "my_awesome_email@email.com"
      PGADMIN_DEFAULT_PASSWORD: "does_not_matter"
  migrate-postgres:
    build:
      context: "."
      dockerfile: "debezium/Dockerfile"
    depends_on:
      - "postgres"
    environment:
      POSTGRES_DB: "instascraper"
    
  # NEO4J
  neo4j:
    image: "neo4j:3.5.12"
    ports:
      - "7474:7474"
      - "7687:7687"

  neo4j-followings-inserter:
    build:
      context: "."
      dockerfile: "neo4j-inserter/insta_user-inserter/Dockerfile"
    depends_on:
      - "neo4j"
      - "my-kafka"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "neo4j-followings-inserter"
      KAFKA_INFO_TOPIC: "postgres.public.followings"
      NEO4j_PASSWORD: "12345678"
  
    neo4j-posts-inserter:
      build:
        context: "."
        dockerfile: "neo4j-inserter/posts-inserter/Dockerfile"
      depends_on:
        - "neo4j"
        - "my-kafka"
      environment:
        KAFKA_ADDRESS: "my-kafka:9092"
        KAFKA_GROUPID: "neo4j-followings-inserter"
        KAFKA_INFO_TOPIC: "postgres.public.posts"
        NEO4j_PASSWORD: "12345678"
    
    neo4j-followings-inserter:
      build:
        context: "."
        dockerfile: "neo4j-inserter/insta_tagged_users-inserter/Dockerfile"
      depends_on:
        - "neo4j"
        - "my-kafka"
      environment:
        KAFKA_ADDRESS: "my-kafka:9092"
        KAFKA_GROUPID: "neo4j-followings-inserter"
        KAFKA_INFO_TOPIC: "postgres.public.tagged_users"
        NEO4j_PASSWORD: "12345678"


  # FILTER
  insta-user-filter:
    build:
      context: "."
      dockerfile: "kafka/changestream/insta_user_names-filter/Dockerfile"
    depends_on:
      - "postgres"
      - "connect"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_user_names-filter"
  insta-post-picture-filter:
    build:
      context: "."
      dockerfile: "kafka/changestream/insta_post_pictures-filter/Dockerfile"
    depends_on:
      - "postgres"
      - "connect"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "insta_post_pictures-filter"
  twitter-user-filter:
    build:
      context: "."
      dockerfile: "kafka/changestream/twitter_user_names-filter/Dockerfile"
    depends_on:
      - "postgres"
      - "connect"
    environment:
      KAFKA_ADDRESS: "my-kafka:9092"
      KAFKA_GROUPID: "twitter_user_names-filter"
